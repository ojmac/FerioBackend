// <auto-generated />
using System;
using FerioBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerioBackend.Migrations
{
    [DbContext(typeof(FerioDbContext))]
    partial class FerioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("FerioBackend.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FerioBackend.Models.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Leido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StandId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("FerioBackend.Models.Stand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EnlaceWeb")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HorarioAtencion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stands");
                });

            modelBuilder.Entity("FerioBackend.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contrasena")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Empresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TokenExpiration")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StandId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FerioBackend.Models.UsuarioStandFavorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StandId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioStandFavorito");
                });

            modelBuilder.Entity("StandCategoria", b =>
                {
                    b.Property<int>("StandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StandId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("StandCategoria");
                });

            modelBuilder.Entity("FerioBackend.Models.Mensaje", b =>
                {
                    b.HasOne("FerioBackend.Models.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandId");

                    b.HasOne("FerioBackend.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stand");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FerioBackend.Models.Usuario", b =>
                {
                    b.HasOne("FerioBackend.Models.Stand", "Stand")
                        .WithOne("Usuario")
                        .HasForeignKey("FerioBackend.Models.Usuario", "StandId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("FerioBackend.Models.UsuarioStandFavorito", b =>
                {
                    b.HasOne("FerioBackend.Models.Stand", "Stand")
                        .WithMany()
                        .HasForeignKey("StandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FerioBackend.Models.Usuario", "Usuario")
                        .WithMany("StandsFavoritos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stand");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("StandCategoria", b =>
                {
                    b.HasOne("FerioBackend.Models.Categoria", "Categoria")
                        .WithMany("StandCategoria")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FerioBackend.Models.Stand", "Stand")
                        .WithMany("StandCategoria")
                        .HasForeignKey("StandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("FerioBackend.Models.Categoria", b =>
                {
                    b.Navigation("StandCategoria");
                });

            modelBuilder.Entity("FerioBackend.Models.Stand", b =>
                {
                    b.Navigation("StandCategoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FerioBackend.Models.Usuario", b =>
                {
                    b.Navigation("StandsFavoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
